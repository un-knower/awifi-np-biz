<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.awifi.np</groupId>
	<artifactId>awifi-np-biz</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<modules>
		<module>awifi-np-biz-common</module>
		<module>awifi-np-biz-pub</module>
		<module>awifi-np-biz-merchant</module>
		<module>awifi-np-biz-device</module>
		<module>awifi-np-biz-merchantdevice</module>
		<module>awifi-np-biz-devicebind</module>
		<module>awifi-np-biz-user</module>
		<module>awifi-np-biz-project</module>
		<module>awifi-np-biz-toe-admin</module>
		<module>awifi-np-biz-mock</module>
		<module>awifi-np-biz-np-admin</module>
        <module>awifi-np-biz-timebuy</module>
        <module>awifi-np-biz-portal</module>
        <module>awifi-np-biz-mws</module>
        <module>awifi-np-biz-toe-portal</module>
        <module>awifi-np-biz-page</module>
        <module>awifi-np-biz-tob</module>
        <module>awifi-np-biz-app</module>
		<module>awifi-np-biz-eagleeye</module>
        <module>awifi-np-biz-stat</module>
	</modules>

	<!-- 各jar版本号统一定义 -->
	<properties>
		<java.version>1.8</java.version>
		<spring.version>4.3.9.RELEASE</spring.version>
		<mybatis.version>3.4.1</mybatis.version>
		<mybatis-spring.version>1.3.0</mybatis-spring.version>
		<mysql.version>5.1.38</mysql.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<powermock-api-mockito.version>1.6.5</powermock-api-mockito.version>
		<powermock-module-junit4.version>1.6.5</powermock-module-junit4.version>
		<aspectj.version>1.8.8</aspectj.version>
		<druid.version>1.0.29</druid.version>
		<jedis.version>2.8.1</jedis.version>
		<lang3.version>3.4</lang3.version>
		<fastjson.version>1.2.23</fastjson.version>
		<poi.version>3.12</poi.version>
		<jxl.version>2.6.10</jxl.version>
		<servlet-api.version>3.1.0</servlet-api.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-fileupload.version>1.3.1</commons-fileupload.version>
		<jackson.version>2.8.5</jackson.version>
		<commons-logging.version>1.1.3</commons-logging.version>
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.2</slf4j.version>
	</properties>

	<dependencies>

		<!-- spring 配置 -->

		<!-- spring 核心包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring 基本包，包含访问配置文件、创建和管理bean以及进行IoC/DI相关操作的所有类 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 扩展包，为核心包提供大量的扩展 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 扩展包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring web�?发时用到的核心类 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring JDBC封装 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 集成测试包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- 用于切面编程 spring 依赖包 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>1.0</version>
        </dependency>

		<!-- MyBatis 配置 -->

		<!-- MyBatis 3 核心包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- MyBatis 3 用来创建SqlSessionfactory -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>

		<!-- MySQL 包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- druid连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>

		<!-- 基础数据操作 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${lang3.version}</version>
		</dependency>

		<!-- fastjson，阿里Json处理 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>

		<!-- poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-excelant</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<!-- jxl -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>${jxl.version}</version>
		</dependency>

		<!-- web开发，servlet抽象集 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- IO,用于上传下载 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>

		<!-- jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock-api-mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock-module-junit4.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- 日志分级 -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>

		<!-- Log4j 日志 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>
		<!-- maven 插件开始 -->
		<plugins>
			<!-- 资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${java.version}</source><!-- 源代码使用的开发版本 -->
					<target>${java.version}</target><!-- 需要生成的目标class文件的编译版本 -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- tomcat插件 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
			</plugin>
			<!-- 解决maven test命令时console出现中文乱码乱码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<forkMode>once</forkMode>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
			<!-- 打war包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/resources/${profiles.active}</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                            <filtering>true</filtering>
                        </resource>
                        <resource>
                            <directory>${project.build.directory}/classes</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                            <excludes>
                                <exclude>src/main/resources/${profiles.active}/*</exclude>
                                <filtering>true</filtering>
                            </excludes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
		</plugins> 
		<!-- maven 插件结束 -->
		<resources>
			<resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
                <excludes>
                   <exclude>env/alpha/*</exclude>  
                   <exclude>env/beta/*</exclude>  
                   <exclude>env/prd/*</exclude>  
                </excludes>
                <filtering>true</filtering> 
            </resource>
            <resource>
                <directory>src/main/resources/${profiles.active}</directory>
                <filtering>true</filtering> 
            </resource>
		</resources>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testResources>
			<testResource>
				<directory>src/main/resources/${profiles.active}</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</testResource>
		</testResources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
	</build>
	
	<profiles>
	    <profile>  
	        <!-- 本地开发环境 -->
	        <id>alpha</id>
	        <properties>
	            <profiles.active>env/alpha</profiles.active>
	        </properties>
	        <activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
	    </profile>
	    <profile>
	        <!-- 测试环境 -->
	        <id>beta</id>
	        <properties>
	            <profiles.active>env/beta</profiles.active>
	        </properties>
	    </profile>
	    <profile>
	        <!-- 生产环境 -->
	        <id>prd</id>
	        <properties>
	            <profiles.active>env/prd</profiles.active>
	        </properties>
	    </profile>
	</profiles>
    
    <!-- maven私库 -->
    <repositories>
        <repository>
            <id>aWiFi-rep</id>
            <name>aWiFi Private Repository</name>
            <url>http://192.168.41.25:8081/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    
</project>